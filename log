Fri, Mar 21, 2025  1:17:02 AM: 
 tests:  0|5
total_score: 0/70
3f6cb15
Fri, Mar 21, 2025 10:52:35 PM: 
 exercises.c | 52 ++++++++++++++++++++++++++++++++++++++++++----------
 1 file changed, 42 insertions(+), 10 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'eliminaElementos':
exercises.c:91:16: error: comparison between pointer and integer [-Werror]
       if (L[k] == elem)
                ^~
exercises.c:92:21: error: passing argument 1 of 'popCurrent' from incompatible pointer type [-Werror=incompatible-pointer-types]
          popCurrent(L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int *'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:73:17: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += *L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                 ^
test.c: In function 'crea_lista':
exercises.c:50:8: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       L[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
        ^
test.c: In function 'eliminaElementos':
exercises.c:91:12: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (L[k] == elem)
            ^
cc1.exe: all warnings being treated as errors
Compilation failed
1d0b489
Fri, Mar 21, 2025 10:56:24 PM: 
 exercises.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'eliminaElementos':
exercises.c:92:21: error: passing argument 1 of 'popCurrent' makes pointer from integer without a cast [-Werror=int-conversion]
          popCurrent(*L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:73:17: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += *L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                 ^
test.c: In function 'crea_lista':
exercises.c:50:8: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       L[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
        ^
test.c: In function 'eliminaElementos':
exercises.c:91:14: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (*(L[k]) == elem)
              ^
cc1.exe: all warnings being treated as errors
Compilation failed
e200963
Fri, Mar 21, 2025 11:05:02 PM: 
 exercises.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'crea_lista':
exercises.c:50:12: error: assignment makes integer from pointer without a cast [-Werror=int-conversion]
       L[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
            ^
exercises.c:52:16: error: comparison between pointer and integer [-Werror]
       if (L[k] == NULL)                   // Flag por si hay un error en la asignación de memoria
                ^~
exercises.c: In function 'eliminaElementos':
exercises.c:92:21: error: passing argument 1 of 'popCurrent' makes pointer from integer without a cast [-Werror=int-conversion]
          popCurrent(L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:73:16: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                ^
test.c: In function 'crea_lista':
exercises.c:50:8: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       L[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
        ^
test.c: In function 'eliminaElementos':
exercises.c:91:13: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if ((L[k]) == elem)
             ^
cc1.exe: all warnings being treated as errors
Compilation failed
e981807
Fri, Mar 21, 2025 11:07:54 PM: 
 exercises.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'eliminaElementos':
exercises.c:92:21: error: passing argument 1 of 'popCurrent' makes pointer from integer without a cast [-Werror=int-conversion]
          popCurrent(*L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:73:17: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += *L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                 ^
test.c: In function 'crea_lista':
exercises.c:50:8: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       L[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
        ^
test.c: In function 'eliminaElementos':
exercises.c:91:14: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (*(L[k]) == elem)
              ^
cc1.exe: all warnings being treated as errors
Compilation failed
dd41e0c
Fri, Mar 21, 2025 11:08:35 PM: 
 exercises.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'crea_lista':
exercises.c:50:12: error: assignment makes integer from pointer without a cast [-Werror=int-conversion]
       L[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
            ^
exercises.c:52:16: error: comparison between pointer and integer [-Werror]
       if (L[k] == NULL)                   // Flag por si hay un error en la asignación de memoria
                ^~
exercises.c: In function 'eliminaElementos':
exercises.c:92:21: error: passing argument 1 of 'popCurrent' makes pointer from integer without a cast [-Werror=int-conversion]
          popCurrent(*L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:73:17: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += *L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                 ^
test.c: In function 'crea_lista':
exercises.c:50:8: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       L[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
        ^
test.c: In function 'eliminaElementos':
exercises.c:91:14: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (*(L[k]) == elem)
              ^
cc1.exe: all warnings being treated as errors
Compilation failed
462f113
Sat, Mar 22, 2025 12:00:23 AM: 
 exercises.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'crea_lista':
exercises.c:52:19: error: assignment makes integer from pointer without a cast [-Werror=int-conversion]
       elemento[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
                   ^
exercises.c:54:23: error: comparison between pointer and integer [-Werror]
       if (elemento[k] == NULL)                   // Flag por si hay un error en la asignación de memoria
                       ^~
exercises.c:58:16: error: passing argument 1 of 'pushBack' from incompatible pointer type [-Werror=incompatible-pointer-types]
       pushBack(L, elemento) ;                    // Se utiliza "*" porque queremos agregar el valor en la direccion de memoria
                ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:20:6: note: expected 'List * {aka struct List *}' but argument is of type 'int *'
 void pushBack(List *L, void *dato);
      ^~~~~~~~
In file included from test.c:5:0:
exercises.c: In function 'eliminaElementos':
exercises.c:94:21: error: passing argument 1 of 'popCurrent' makes pointer from integer without a cast [-Werror=int-conversion]
          popCurrent(*L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:75:17: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += *L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                 ^
test.c: In function 'crea_lista':
exercises.c:52:15: error: 'elemento' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       elemento[k] = malloc(sizeof(int)) ;        // Se reserva memoria para cada puntero
               ^
exercises.c:58:7: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       pushBack(L, elemento) ;                    // Se utiliza "*" porque queremos agregar el valor en la direccion de memoria
       ^~~~~~~~~~~~~~~~~~~~~
test.c: In function 'eliminaElementos':
exercises.c:93:14: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (*(L[k]) == elem)
              ^
cc1.exe: all warnings being treated as errors
Compilation failed
aef3ff9
Sat, Mar 22, 2025 12:35:03 AM: 
 exercises.c | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'crea_lista':
exercises.c:57:16: error: passing argument 1 of 'pushBack' from incompatible pointer type [-Werror=incompatible-pointer-types]
       pushBack(L, elemento) ;                  // Se utiliza "*" porque queremos agregar el valor en la direccion de memoria
                ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:20:6: note: expected 'List * {aka struct List *}' but argument is of type 'int *'
 void pushBack(List *L, void *dato);
      ^~~~~~~~
In file included from test.c:5:0:
exercises.c: In function 'eliminaElementos':
exercises.c:93:21: error: passing argument 1 of 'popCurrent' makes pointer from integer without a cast [-Werror=int-conversion]
          popCurrent(*L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:74:17: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += *L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                 ^
test.c: In function 'crea_lista':
exercises.c:57:7: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       pushBack(L, elemento) ;                  // Se utiliza "*" porque queremos agregar el valor en la direccion de memoria
       ^~~~~~~~~~~~~~~~~~~~~
test.c: In function 'eliminaElementos':
exercises.c:92:14: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (*(L[k]) == elem)
              ^
cc1.exe: all warnings being treated as errors
Compilation failed
77a0f5e
Sat, Mar 22, 2025 12:47:00 AM: 
 exercises.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'eliminaElementos':
exercises.c:91:21: error: passing argument 1 of 'popCurrent' makes pointer from integer without a cast [-Werror=int-conversion]
          popCurrent(*L[k]) ;
                     ^
In file included from exercises.c:6:0,
                 from test.c:5:
arraylist.h:32:7: note: expected 'List * {aka struct List *}' but argument is of type 'int'
 void *popCurrent(List *L);
       ^~~~~~~~~~
In file included from test.c:5:0:
test.c: In function 'sumaLista':
exercises.c:72:17: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       suma += *L[k] ;                      // Se va sumando cada elemento a la variable "suma"
                 ^
test.c: In function 'eliminaElementos':
exercises.c:90:14: error: 'L' may be used uninitialized in this function [-Werror=maybe-uninitialized]
       if (*(L[k]) == elem)
              ^
cc1.exe: all warnings being treated as errors
Compilation failed
dfb924f
Sat, Mar 22, 2025 12:48:22 AM: 
 exercises.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)
test.c: In function 'test_suma_lista':
test.c:100:17: error: implicit declaration of function 'sumaLista' [-Werror=implicit-function-declaration]
     int suma2 = sumaLista(L);
                 ^~~~~~~~~
test.c: In function 'test_elimina_elemento':
test.c:132:5: error: implicit declaration of function 'eliminaElementos' [-Werror=implicit-function-declaration]
     eliminaElementos(L, elem);
     ^~~~~~~~~~~~~~~~
cc1.exe: all warnings being treated as errors
Compilation failed
d872519
Sat, Mar 22, 2025 12:51:09 AM: 
 exercises.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)
In file included from test.c:5:0:
exercises.c: In function 'sumaLista':
exercises.c:77:1: error: control reaches end of non-void function [-Werror=return-type]
 }
 ^
cc1.exe: all warnings being treated as errors
Compilation failed
fa20e5c
